---

# project information
project_name: obico
project_url: "https://www.obico.io/"
project_logo: "https://www.obico.io/wwwimg/logo.svg"
project_blurb: "Obico is a community-built, open-source smart 3D printing platform used by makers, enthusiasts, and tinkerers around the world."
project_github_repo_url: "https://github.com/imagegenius/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest" }

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Latest obico-server release, only supports CPU for machine learning." }
  - { tag: "cuda", desc: "Latest obico-server release with support for GPU (CUDA) acceleration." }

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "REDIS_URL", env_value: "redis://<ip>:<port>", desc: "Redis URL, eg. `redis://192.168.1.2:6379`" }
  - { env_var: "HOST_IP", env_value: "192.168.0.5/example.com", desc: "Domain/IP used to access the frontend" }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "path_to_appdata", desc: "Contains django database, logs and timelapses" }
param_usage_include_ports: true
param_ports:
  - { external_port: "3334", internal_port: "3334", port_desc: "WebUI Port" }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: false
opt_param_usage_include_vols: false
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false

# unraid template
unraid_requirement: "Redis"
unraid_category: "Cloud: Tools:"

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The WebUI can be found at `http://your-ip:3334`.

  **After starting the container, it is important to configure obico-server (Django) to ensure that all assets are properly loaded. 
  
  Follow steps 1-2 under 'Login as Django admin' and 'Configure Django site' in the [Obico Server Configuration](https://www.obico.io/docs/server-guides/configure/#login-as-django-admin) guide closely. These steps will guide you through setting up login credentials and configuring the domain name to match the IP used to access the container, or your FQDN if using a reverse proxy.

  You can also use environment variables to set various configurations, such as email settings. A list of available environment variables can be found [here](https://github.com/TheSpaghettiDetective/obico-server/blob/release/docker-compose.yml#L13-L40).

  Obico requires that you have Redis setup externally.

  Follow these steps if you need help setting up Redis.

  #### Redis:

  Redis can be ran within the container using a docker-mod or you can use an external Redis server/container.

  If you don't need to use Redis elsewhere add this environment variable: `DOCKER_MODS=imagegenius/mods:universal-redis`, and set `REDIS_URL` to `redis://localhost:6379`.

  Or within a seperate container:

  ```bash
  docker run -d \
    --name=redis \
    -p 6379:6379 \
    redis
  ```

  Obico do not publish versioning for obico-server, so we use the latest commit hash to identify the current version.

# changelog
changelogs:
  - { date: "29.09.23:", desc: "precompile darknet" }
  - { date: "29.06.23:", desc: "create seperate cuda branch" }
  - { date: "23.03.23:", desc: "add service checks" }
  - { date: "05.03.23:", desc: "rollback moonraker (breaking upstream update)" }
  - { date: "23.01.23:", desc: "BREAKING: removed redis" }
  - { date: "14.01.23:", desc: "Update to s6v3" }
  - { date: "05.01.23:", desc: "Initial Working Release." }
  - { date: "04.01.23:", desc: "Initial Release." }
